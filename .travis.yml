language: c

env:
  global:
    - secure: "AlOrAUma2ZPYnWkm0S5VyUyTJstzhgJWMuo7of+SCbh/BkNOov99QU2E0wBuwP9VACODZcnA6NUgR76+hzLWLeldfoOL/OBD47NW7DfsZGutdl2IRukuQ1oAjA7UrLnM8ILg/MeCc7yo+UkjmYY/+Kih7610IeAuXkCrQpbuvJY="
    - DB=mysql OSSEC_TYPE=server GEOIP=yes ZEROMQ=yes

addons:
  coverity_scan:
    project:
      name: "ossec/ossec-hids"
      #description: "OSSEC is an Open Source Host Intrusion Detection System"
    notification_email: ddpbsd@gmail.com
    build_command_prepend: "cd src"
    build_command:   "make TARGET=server"
    branch_pattern: coverity_scan


compiler:
- gcc


matrix:
  fast_finish: true

before_script:
- sudo apt-get update -qq
- if [[ "${GEOIP}" == "yes"  ]]; then ( sudo apt-get install geoip-bin geoip-database libgeoip-dev libgeoip1 ); fi
- if [[ "${PRELUDE}" == "yes" ]]; then ( sudo apt-get install libprelude-dev ); fi
- if [[ "${ZEROMQ}" == "yes" ]]; then ( sudo apt-get install libzmq3-dev
  && wget http://download.zeromq.org/czmq-2.2.0.tar.gz
  && tar xfz czmq-2.2.0.tar.gz && cd czmq-2.2.0/
  && ./configure && make all -j && sudo make install
  ); fi
- if [[ "${OSSEC_TYPE}" == "winagent" ]]; then ( sudo apt-get install aptitude && sudo aptitude -y install mingw-w64 nsis ); fi
- if [[ "${OSSEC_TYPE}" == "test" ]]; then ( sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu/ vivid main " && sudo apt-get update && sudo apt-get install check valgrind ); fi


script:
- COMMAND="V=1 TARGET=${OSSEC_TYPE}"
  && if ! [[ "${DB}" = "none" ]]; then COMMAND="${COMMAND} DATABASE=${DB}"; fi
  && if [[ "${GEOIP}" = "yes" ]]; then COMMAND="${COMMAND} USE_GEOIP=1"; fi
  && if [[ "${PRELUDE}" = "yes" ]]; then COMMAND="${COMMAND} USE_PRELUDE=1"; fi
  && if [[ "${PICVIZ}" = "yes" ]]; then COMMAND="${COMMAND} USE_PICVIZ=1"; fi
  && if [[ "${ZEROMQ}" = "yes" ]]; then COMMAND="${COMMAND} USE_ZEROMQ=1"; fi
  && ( cd src/ && make --warn-undefined-variables ${COMMAND} settings && make --warn-undefined-variables ${COMMAND} -j )
  && if ! [[ "${OSSEC_TYPE}" = "test" || "${OSSEC_TYPE}" = "winagent" ]]; then ( cd src/ && sudo make --warn-undefined-variables ${COMMAND} install ) fi

- if [[ "${OSSEC_TYPE}" == "test" ]]; then ( cd src/ && make --warn-undefined-variables test_valgrind ) fi
- if [[ "${RULES}" == "test" ]]; then ( cd src/ && sudo make V=1 TARGET=server test-rules ) fi


deploy:
  provider: releases
  api_key:
    secure: "DiVPTCt1C8XCmFlzcpmFkqfRmxz85/RCE2euvU/c1EiABjfO20aZARCC9zsepAwAGWWsq3uGRLp0aVuJuh4LvTdGxIJDOqYR8z1pByfY4epgE7zmRCIWjx+nAwBpLlfYalMWFpt7vmPp9mKycFkUR2NFoiEfOgoO9wGN0ZgmwSM="
  file: src/win-pkg/ossec-win32-agent.exe
  skip_cleanup: true
  on:
    tags: true
    all_branches: true
    repo: ossec/ossec-hids
    condition: $OSSEC_TYPE = winagent

